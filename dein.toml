#
#  APPEARANCE
#
[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'kien/rainbow_parentheses.vim'

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
    let g:airline_powerline_fonts = 1
    let g:airline#extensions#tabline#enabled = 1
    " let g:airline#extensions#tabline#buffer_idx_mode = 1
    let g:airline#extensions#tabline#buffer_nr_show = 1
    let g:airline#extensions#whitespace#mixed_indent_algo = 1
    let g:airline#extensions#ale#enabled = 1
    nmap <C-j> <Plug>AirlineSelectPrevTab
    nmap <C-k> <Plug>AirlineSelectNextTab
'''

[[plugins]]
repo = 'tomasiser/vim-code-dark'
hook_add = '''
colorscheme codedark
let g:airline_theme = 'codedark'
'''


#
#  UTILITIES
#
[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
if executable('clangd')
    au User lsp_setup call lsp#register_server({
        \ 'name': 'clangd',
        \ 'cmd': {server_info->['clangd']},
        \ 'whitelist': ['c', 'cpp', 'objc', 'objcpp'],
        \ })
endif

if executable('pyls')
        au User lsp_setup call lsp#register_server({
                \ 'name': 'pyls',
                \ 'cmd': {server_info->['pyls']},
                \ 'whitelist': ['python'],
        \ })
endif

let g:lsp_signs_enabled = 1
let g:lsp_diagnostics_echo_cursor = 1
let g:lsp_diagnostics_enabled = 0
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-emoji.vim'
hook_add = '''
au User asyncomplete_setup call asyncomplete#register_source(asyncomplete#sources#emoji#get_source_options({
    \ 'name': 'emoji',
    \ 'whitelist': ['*'],
    \ 'completor': function('asyncomplete#sources#emoji#completor'),
    \ }))
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete-file.vim'
hook_add = '''
au User asyncomplete_setup call asyncomplete#register_source(asyncomplete#sources#file#get_source_options({
    \ 'name': 'file',
    \ 'whitelist': ['*'],
    \ 'priority': 10,
    \ 'completor': function('asyncomplete#sources#file#completor')
    \ }))
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = 'map <C-n> :NERDTreeToggle<CR>'

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
    let g:ale_sign_column_always = 1
    let g:ale_fix_on_save = 1
    let g:ale_completion_enabled = 1
    let g:ale_sign_error = '⨉'
    let g:ale_sign_warning = '⚠'
    let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
    let g:ale_linters = {
    \   'python': ['pylint', 'mypy'],
    \}
    let g:ale_fixers = {
    \   '*': ['remove_trailing_lines', 'trim_whitespace'],
    \}
'''

[[plugins]]
repo = 'Yggdroot/indentLine'

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

[[plugins]]
repo = 'Townk/vim-autoclose'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'
